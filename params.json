{"name":"Gravite","tagline":"Notes and symbolic and numerical computations and implementations on Gravity","body":"# Gravite - Gravity (Gravité)\r\nNotes and symbolic and numerical computations and implementations on Gravity\r\n\r\nIncludes: \r\n* Gravity_Notes_grande.tex\r\n* /pdfs/Gravity_Notes_grande.pdf\r\n* `Rn.sage` \r\n\r\n## SageManifolds implementations\r\n\r\n### Euclidean space as a Manifold - R^2,R^3,R^n\r\n\r\nUsing [SageManifolds](http://sagemanifolds.obspm.fr), Euclidean space, R^2, R^3, and R^n, is implemented as a manifold.\r\n\r\n#### Rn.sage - Euclidean spaces as manifolds using [sagemanifolds](http://sagemanifolds.obspm.fr)\r\n*Features*\r\n* R^2,R^3,R^n as a manifold, with a chart atlas\r\n\r\n```\r\nsage: load(‘‘Rn.sage’’)  \r\nsage: R2eg = R2() \r\nsage: R3eg = R3() \r\nsage: R4 = Rn(4) \r\nsage: R2eg.M.atlas()\r\n[Chart (R2, (x, y)), Chart (U, (x, y)), Chart (U, (r, ph))]\r\nsage: R3eg.M.atlas()\r\n[Chart (R3, (x, y, z)),\r\n Chart (U, (x, y, z)),\r\n Chart (U, (rh, th, ph)),\r\n Chart (U, (r, phi, zc))]\r\nsage: R4.M.atlas()\r\n[Chart (R4, (x1, x2, x3, x4)),\r\n Chart (U, (x1, x2, x3, x4)),\r\n Chart (U, (rh, th1, th2, ph)),\r\n Chart (U, (r, the1, phi, z))]\r\n```\r\n\r\n* (carefully) define a spherical coordinate and cylindrical coordinate chart on Euclidean spaces, e.g.\r\n\r\n```\r\nsage: R2eg.transit_sph_to_cart.display() \r\nx = r*cos(ph)\r\ny = r*sin(ph)\r\nsage: R3eg.transit_sph_to_cart.display() \r\nx = rh*cos(ph)*sin(th)\r\ny = rh*sin(ph)*sin(th)\r\nz = rh*cos(th)\r\nsage: R3eg.transit_cyl_to_cart.display() \r\nx = r*cos(phi)\r\ny = r*sin(phi)\r\nz = zc\r\nsage: R4.transit_sph_to_cart.display() \r\nx1 = rh*cos(ph)*sin(th1)*sin(th2)\r\nx2 = rh*sin(ph)*sin(th1)*sin(th2)\r\nx3 = rh*cos(th2)*sin(th1)\r\nx4 = rh*cos(th1)\r\n```\r\n\r\n* calculate the **Jacobian!**\r\n\r\n```\r\nsage: to_orthonormal2 , e2, Jacobians2 = R2eg.make_orthon_frames(R2eg.sph_ch) \r\nsage: Jacobians2[0].inverse()[:,R2eg.sph_ch]\r\n[ cos(ph) -r*sin(ph)]\r\n[ sin(ph) r*cos(ph)]\r\nsage: to_orthonormal3sph, e3sph, Jacobians3sph = R3eg.make_orthon_frames(R3eg.sph_ch) \r\nsage: to_orthonormal3cyl, e3cyl, Jacobians3cyl = R3eg.make_orthon_frames(R3eg.cyl_ch) \r\nsage: Jacobians3sph[0].inverse()[:,R3eg.sph_ch]\r\n[ cos(ph)*sin(th) rh*cos(ph)*cos(th) -rh*sin(ph)*sin(th)]\r\n[ sin(ph)*sin(th) rh*cos(th)*sin(ph) rh*cos(ph)*sin(th) ]\r\n[ cos(th)         -rh*sin(th)        0                  ]\r\nsage: Jacobians3cyl[0].inverse()[:,R3eg.cyl_ch]\r\n[ cos(phi) -r*sin(phi) 0]\r\n[ sin(phi) r*cos(phi) 0] \r\n[ 0 0 1]\r\n```\r\n\r\n* equip the Euclidean space manifold with a *metric* *g* and calculate the metric automatically:\r\n\r\n```\r\nsage: R2eg.equip_metric() \r\nsage: R3eg.equip_metric() \r\nsage: R4.equip_metric()\r\n\r\nsage: R2eg.g.display(R2eg.sph_ch.frame(),R2eg.sph_ch)\r\ng = dr*dr + r^2 dph*dph\r\nsage: R3eg.g.display(R3eg.sph_ch.frame(),R3eg.sph_ch)\r\ng = drh*drh + rh^2 dth*dth + rh^2*sin(th)^2 dph*dph\r\nsage: R3eg.g.display(R3eg.cyl_ch.frame(),R3eg.cyl_ch)\r\ng = dr*dr + r^2 dphi*dphi + dzc*dzc\r\nsage: R4.g.display(R4.sph_ch.frame(),R4.sph_ch)\r\ng = drh*drh + rh^2 dth1*dth1 + rh^2*sin(th1)^2 dth2*dth2 + rh^2*sin(th1)^2*sin(th2)^2 dph*dph\r\nsage: R4.g.display(R4.cyl_ch.frame(),R4.cyl_ch)\r\ng = dr*dr + r^2 dthe1*dthe1 + r^2*sin(the1)^2 dphi*dphi + dz*dz\r\n```\r\n* Calculate the so-called orthonormal non-coordinate basis vectors in terms of the (local) coordinate basis vectors, showing clearly and distinctively the difference between the two (concepts)\r\n\r\n```\r\nsage: e2[1].display( R2eg.sph_ch.frame(), R2eg.sph_ch)\r\ne_1 = d/dr\r\nsage: e2[2].display( R2eg.sph_ch.frame(), R2eg.sph_ch)\r\ne_2 = 1/r d/dph\r\nsage: for i in range(1,3+1):                                                         \r\n    e3sph[i].display( R3eg.sph_ch.frame(), R3eg.sph_ch )\r\n....:     \r\ne_1 = d/drh\r\ne_2 = 1/rh d/dth\r\ne_3 = 1/(rh*sin(th)) d/dph\r\nsage: for i in range(1,3+1):\r\n    e3cyl[i].display( R3eg.cyl_ch.frame(), R3eg.cyl_ch )\r\n....:     \r\ne_1 = d/dr\r\ne_2 = 1/r d/dphi\r\ne_3 = d/dzc\r\n```\r\n\r\n![](https://ernestyalumni.files.wordpress.com/2016/01/rn_examples_01.png)\r\n\r\n![](https://ernestyalumni.files.wordpress.com/2016/01/rn_examples_02.png)\r\n\r\n![](https://ernestyalumni.files.wordpress.com/2016/01/rn_examples_03.png)\r\n\r\n### Authors and Contributors\r\n@ernestyalumni \r\n\r\n","google":"UA-60481594-1","note":"Don't delete this file! It's used internally to help with page regeneration."}